{"version":3,"sources":["components/Pagination/Pagination.tsx","App.tsx","utils.ts","index.tsx"],"names":["Pagination","items","total","perPage","currentPage","onPageChange","lastPage","Math","ceil","leftDisabled","rightDisabled","arrOfPages","slice","className","classNames","disabled","href","onClick","map","page","i","active","handleSelectPage","from","to","numbers","n","push","getNumbers","App","useState","setPerPage","setCurrentPage","startItem","endItem","length","arrOfPerPageItems","id","value","onChange","event","target","handlePerPage","htmlFor","item","ReactDOM","render","document","getElementById"],"mappings":"oNAWaA,EAA8B,SAAC,GAMrC,IALLC,EAKI,EALJA,MACAC,EAII,EAJJA,MACAC,EAGI,EAHJA,QACAC,EAEI,EAFJA,YACAC,EACI,EADJA,aAQMC,EAAWC,KAAKC,KAAKN,EAAQC,GAc7BM,EAA+B,IAAhBL,EACfM,EAAgBN,IAAgBE,EAEhCK,EAAaV,EAAMW,MAAM,EAAGN,GAElC,OACE,mCACE,qBAAIO,UAAU,aAAd,UACE,oBAAIA,UAAWC,IAAW,YAAa,CAAEC,SAAUN,IAAnD,SACE,mBACE,UAAQ,WACRI,UAAU,YACVG,KAAK,QACL,gBAAc,OACdC,QApBc,WACF,IAAhBb,GACFC,EAAaD,EAAc,IAavB,oBAWDO,EAAWO,KAAI,SAACC,EAAMC,GACrB,OACE,oBACEP,UAAWC,IAAW,YACpB,CAAEO,OAAQjB,IAAgBgB,EAAI,IAFlC,SAKE,mBACE,UAAQ,WACRP,UAAU,YACVG,KAAI,WAAMG,EAAKP,MAAM,IACrBK,QAAS,kBAnDE,SAACE,GACpBf,IAAgBe,GAClBd,EAAac,GAiDYG,CAAiBF,EAAI,IAJtC,SAMGA,EAAI,KARFD,EAAKP,MAAM,OActB,oBAAIC,UAAWC,IAAW,YAAa,CAAEC,SAAUL,IAAnD,SACE,mBACE,UAAQ,WACRG,UAAU,YACVG,KAAK,QACL,gBAAc,QACdC,QAzDe,WACnBb,IAAgBE,GAClBD,EAAaD,EAAc,IAkDvB,0BCxEJH,ECNC,SAAoBsB,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,EDDKG,CAAW,EAAG,IACzBV,KAAI,SAAAQ,GAAC,qBAAYA,MAEPG,EAAgB,WAC3B,MAA8BC,mBAAS,GAAvC,mBAAO3B,EAAP,KAAgB4B,EAAhB,KACA,EAAsCD,mBAAS,GAA/C,mBAAO1B,EAAP,KAAoB4B,EAApB,KAaMC,GAAc7B,EAAc,GAAKD,EACjC+B,EAAW9B,EAAcD,EAAWF,EAAMkC,OAC5ClC,EAAMkC,OACNF,EAAY9B,EACViC,EAAoBnC,EAAMW,MAAMqB,EAAWC,GAEjD,OACE,sBAAKrB,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWT,EADX,mBACiC6B,EAAY,EAD7C,cACoDC,EADpD,eACkEjC,EAAMkC,OADxE,OAIA,sBAAKtB,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACE,UAAQ,kBACRwB,GAAG,kBACHxB,UAAU,eACVyB,MAAOnC,EACPoC,SAAU,SAACC,GAAD,OAhCE,SAACA,GACrBT,GAAYS,EAAMC,OAAOH,OACzBN,EAAe,GA8BcU,CAAcF,IALrC,UAOE,wBAAQF,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,qBAIJ,uBAAOK,QAAQ,kBAAkB9B,UAAU,qBAA3C,+BAKF,cAAC,EAAD,CACEZ,MAAOA,EACPC,MAAOD,EAAMkC,OACbhC,QAASA,EACTC,YAAaA,EACbC,aA9CoB,SAACc,GACrBf,IAAgBe,GAClBa,EAAeb,MA+Cf,6BACGiB,EAAkBlB,KAAI,SAAA0B,GAAI,OACzB,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,YElElCC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.2d713508.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\n\ntype Props = {\n  items: string[];\n  total: number;\n  perPage: number;\n  currentPage: number;\n  onPageChange: (page: number) => void;\n};\n\nexport const Pagination: React.FC<Props> = ({\n  items,\n  total,\n  perPage,\n  currentPage,\n  onPageChange,\n}) => {\n  const handleSelectPage = (page: number) => {\n    if (currentPage !== page) {\n      onPageChange(page);\n    }\n  };\n\n  const lastPage = Math.ceil(total / perPage);\n\n  const handleClickRight = () => {\n    if (currentPage !== lastPage) {\n      onPageChange(currentPage + 1);\n    }\n  };\n\n  const handleClickLeft = () => {\n    if (currentPage !== 1) {\n      onPageChange(currentPage - 1);\n    }\n  };\n\n  const leftDisabled = currentPage === 1;\n  const rightDisabled = currentPage === lastPage;\n\n  const arrOfPages = items.slice(0, lastPage);\n\n  return (\n    <>\n      <ul className=\"pagination\">\n        <li className={classNames('page-item', { disabled: leftDisabled })}>\n          <a\n            data-cy=\"prevLink\"\n            className=\"page-link\"\n            href=\"#prev\"\n            aria-disabled=\"true\"\n            onClick={handleClickLeft}\n          >\n            «\n          </a>\n        </li>\n\n        {arrOfPages.map((page, i) => {\n          return (\n            <li\n              className={classNames('page-item',\n                { active: currentPage === i + 1 })}\n              key={page.slice(5)}\n            >\n              <a\n                data-cy=\"pageLink\"\n                className=\"page-link\"\n                href={`#${page.slice(5)}`}\n                onClick={() => handleSelectPage(i + 1)}\n              >\n                {i + 1}\n              </a>\n            </li>\n          );\n        })}\n\n        <li className={classNames('page-item', { disabled: rightDisabled })}>\n          <a\n            data-cy=\"nextLink\"\n            className=\"page-link\"\n            href=\"#next\"\n            aria-disabled=\"false\"\n            onClick={handleClickRight}\n          >\n            »\n          </a>\n        </li>\n      </ul>\n    </>\n  );\n};\n","import React, { ChangeEvent, useState } from 'react';\nimport './App.css';\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst items = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const [perPage, setPerPage] = useState(5);\n  const [currentPage, setCurrentPage] = useState(1);\n\n  const handlePerPage = (event: ChangeEvent<HTMLSelectElement>) => {\n    setPerPage(+event.target.value);\n    setCurrentPage(1);\n  };\n\n  const handleCurrentPage = (page: number) => {\n    if (currentPage !== page) {\n      setCurrentPage(page);\n    }\n  };\n\n  const startItem = ((currentPage - 1) * perPage);\n  const endItem = (currentPage * perPage) > items.length\n    ? items.length\n    : startItem + perPage;\n  const arrOfPerPageItems = items.slice(startItem, endItem);\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${startItem + 1} - ${endItem} of ${items.length})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={perPage}\n            onChange={(event) => handlePerPage(event)}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        items={items}\n        total={items.length}\n        perPage={perPage}\n        currentPage={currentPage}\n        onPageChange={handleCurrentPage}\n      />\n\n      <ul>\n        {arrOfPerPageItems.map(item => (\n          <li data-cy=\"item\" key={item}>{item}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}